#%RAML 1.0
title: Global Miles E-commerce API
version: 2.1.0
baseUri: https://api.sandbox.globalmiles.com
baseUriParameters: {}
documentation:
- title: Global Miles E-commerce API
  content: API for E-commerce Partners. This document includes Cart, Discount, Payment, Order and Return related endpoints provided by Global Miles.
securitySchemes:
  auth:
    type: OAuth 2.0
    settings:
      authorizationUri: ''
      accessTokenUri: https://api.sandbox.globalmiles.com/oauth/token
      authorizationGrants:
      - client_credentials
      scopes: []
types:
  StartMilePaymentResult:
    example:
      value:
        payment_provision_token: ppt_4c558b3d-7146-4043-b559-4599434e2ad7
    displayName: StartMilePaymentResult
    description: Result object of payment for start action.
    type: object
    properties:
      payment_provision_token:
        required: true
        displayName: payment_provision_token
        description: A token represents a payment object for provisioning.
        type: string
  RetrieveReturnResponse:
    example:
      value:
        status: ok
        result:
          return_provision_token: rpt_f4dd4f17-da27-4c61-af29-f7b116efa0ef
          transaction_id: 6c1a75f2-d7de-4ac1-80e0-60ac83f7e083
          created_at: 1/1/2018 10:00:00 AM
          updated_at: 1/1/2018 10:10:00 AM
          status: completed
          amount:
            value: 10
            currency: USD
    displayName: RetrieveReturnResponse
    description: Response object of return for retrieve action.
    type: Response
    properties:
      result:
        required: false
        displayName: result
        description: Result object of the response.
        type: Return
  StartMilePaymentResponse:
    example:
      value:
        status: ok
        result:
          payment_provision_token: ppt_4c558b3d-7146-4043-b559-4599434e2ad7
    displayName: StartMilePaymentResponse
    description: Response object of payment for start action.
    type: Response
    properties:
      result:
        required: false
        displayName: result
        description: Result object of the response.
        type: StartMilePaymentResult
  RetrieveOrderResponse:
    example:
      value:
        status: ok
        result:
          transaction_token: ort_b3b45895-f961-4cde-b9df-5b274fb757e7
          transaction_id: 6c1a75f2-d7de-4ac1-80e0-60ac83f7e083
          completed_at: 1/1/2018 9:00:00 AM
          created_at: 1/1/2018 10:00:00 AM
          updated_at: 1/1/2018 10:10:00 AM
          status: processed
          subtotal: 90
          tax: 10.2
          total: 100.2
          currency: USD
    displayName: RetrieveOrderResponse
    description: Response object of order for retrieve action.
    type: Response
    properties:
      result:
        required: false
        displayName: result
        description: Result object of the response.
        type: BasicOrderResult
  ListReturnResponse:
    example:
      value:
        status: ok
        result:
        - return_provision_token: rpt_f4dd4f17-da27-4c61-af29-f7b116efa0ef
          transaction_id: 6c1a75f2-d7de-4ac1-80e0-60ac83f7e083
          created_at: 1/1/2018 10:00:00 AM
          updated_at: 1/1/2018 10:10:00 AM
          status: completed
          amount:
            value: 10
            currency: USD
        - return_provision_token: rpt_a0d2070b-0676-4131-b315-c9d653a31505
          transaction_id: 42db67d6-fde6-47ce-81eb-121cf333e0d7
          created_at: 1/2/2018 10:00:00 AM
          updated_at: 1/2/2018 10:10:00 AM
          status: cancelled
          amount:
            value: 10
            currency: USD
        - return_provision_token: rpt_0399bad5-fac3-45dd-88af-99604b153355
          transaction_id: 51424457-4997-4fa2-aed0-1a71aff88294
          created_at: 1/3/2018 10:00:00 AM
          updated_at: 1/3/2018 10:10:00 AM
          status: completed
          residual:
            value: 5
            currency: USD
    displayName: ListReturnResponse
    description: Response object of return for list action.
    type: Response
    properties:
      result:
        required: false
        displayName: result
        description: Result object of the response.
        type: array
        items:
          type: Return
  OrderResponse:
    example:
      value:
        status: ok
        result:
          transaction_token: ort_b3b45895-f961-4cde-b9df-5b274fb757e7
    displayName: OrderResponse
    description: Response object of order.
    type: Response
    properties:
      result:
        required: false
        displayName: result
        description: Result object of the response.
        type: OrderResult
  OrderResult:
    example:
      value:
        transaction_token: ort_b3b45895-f961-4cde-b9df-5b274fb757e7
    displayName: OrderResult
    description: Result object of the response.
    type: object
    properties:
      transaction_token:
        required: true
        displayName: transaction_token
        description: A token represents an order object from Global Miles system.
        type: string
  CancelReturnRequest:
    example:
      value:
        store_code: ECO123858493939
        return_provision_token: rpt_f4dd4f17-da27-4c61-af29-f7b116efa0ef
    displayName: CancelReturnRequest
    description: Request of return for cancel action.
    type: object
    properties:
      store_code:
        required: true
        displayName: store_code
        description: An identifier for online store.
        type: string
      return_provision_token:
        required: true
        displayName: return_provision_token
        description: A token represents a return object for provisioning.
        type: string
  RefundMilePaymentRequest:
    example:
      value:
        store_code: ECO123858493939
        payment_provision_token: ppt_4c558b3d-7146-4043-b559-4599434e2ad7
        amount:
          value: 10
          currency: USD
    displayName: RefundMilePaymentRequest
    description: Request of payment for refund action.
    type: object
    properties:
      store_code:
        required: true
        displayName: store_code
        description: An identifier for online store.
        type: string
      payment_provision_token:
        required: true
        displayName: payment_provision_token
        description: A token represents a payment object for provisioning.
        type: string
      amount:
        required: true
        displayName: amount
        description: An amount of the payment.
        type: Amount
  CancelMilePaymentRequest:
    example:
      value:
        store_code: ECO123858493939
        payment_provision_token: ppt_4c558b3d-7146-4043-b559-4599434e2ad7
    displayName: CancelMilePaymentRequest
    description: Request of payment for cancel action.
    type: object
    properties:
      store_code:
        required: true
        displayName: store_code
        description: An identifier for online store.
        type: string
      payment_provision_token:
        required: true
        displayName: payment_provision_token
        description: A token represents a payment object for provisioning.
        type: string
  Return:
    example:
      value:
        return_provision_token: rpt_f4dd4f17-da27-4c61-af29-f7b116efa0ef
        transaction_id: 6c1a75f2-d7de-4ac1-80e0-60ac83f7e083
        created_at: 1/1/2018 10:00:00 AM
        updated_at: 1/1/2018 10:10:00 AM
        status: completed
        amount:
          value: 10
          currency: USD
    displayName: Return
    description: Representing a return.
    type: object
    properties:
      return_provision_token:
        required: true
        displayName: return_provision_token
        description: The token value of a return.
        type: string
      transaction_id:
        required: true
        displayName: transaction_id
        description: The ID of the transaction that represents the order.
        type: string
      created_at:
        required: true
        displayName: created_at
        description: Create date time of return. The format is ISO 8601 date and time.
        type: string
      updated_at:
        required: true
        displayName: updated_at
        description: Last update date time of return. The format is ISO 8601 date and time.
        type: string
      status:
        required: true
        displayName: status
        description: The status of return.
        type: string
        enum:
        - started
        - cancelled
        - completed
      amount:
        required: false
        displayName: amount
        description: An amount of return.
        type: Amount
      residual:
        required: false
        displayName: residual
        description: A residual amount of return.
        type: Amount
  CompleteMilePaymentRequest:
    example:
      value:
        store_code: ECO123858493939
        payment_provision_token: ppt_4c558b3d-7146-4043-b559-4599434e2ad7
    displayName: CompleteMilePaymentRequest
    description: Request of payment for complete action.
    type: object
    properties:
      store_code:
        required: true
        displayName: store_code
        description: An identifier for online store.
        type: string
      payment_provision_token:
        required: true
        displayName: payment_provision_token
        description: A token represents a payment object for provisioning.
        type: string
  StartMilePaymentRequest:
    example:
      value:
        store_code: ECO123858493939
        user_token: ut_345021fb-9ed2-4c55-841e-3ffa95ca83bf
        amount:
          value: 10
          currency: USD
    displayName: StartMilePaymentRequest
    description: Request of payment for start action.
    type: object
    properties:
      store_code:
        required: true
        displayName: store_code
        description: An identifier for online store.
        type: string
      user_token:
        required: true
        displayName: user_token
        description: A token that is representing a Global Miles user for the current session.
        type: string
      amount:
        required: true
        displayName: amount
        description: An amount of payment.
        type: Amount
  ListOrderResponse:
    example:
      value:
        status: ok
        result:
        - transaction_token: ort_b3b45895-f961-4cde-b9df-5b274fb757e7
          transaction_id: 6c1a75f2-d7de-4ac1-80e0-60ac83f7e083
          completed_at: 1/1/2018 9:00:00 AM
          created_at: 1/1/2018 10:00:00 AM
          updated_at: 1/1/2018 10:10:00 AM
          status: processed
          subtotal: 90
          tax: 10.2
          total: 100.2
          currency: USD
        - transaction_token: ot_fd7bc94b-4fe4-4c5a-89fa-85ce017c2b0b
          transaction_id: 42db67d6-fde6-47ce-81eb-121cf333e0d7
          completed_at: 1/2/2018 9:00:00 AM
          created_at: 1/2/2018 10:00:00 AM
          updated_at: 1/2/2018 10:10:00 AM
          status: processed
          subtotal: 70
          tax: 8.2
          total: 78.2
          currency: USD
        - transaction_token: ot_e59410fb-831a-47d2-9822-9de6efd3e39e
          transaction_id: 51424457-4997-4fa2-aed0-1a71aff88294
          completed_at: 1/3/2018 9:00:00 AM
          created_at: 1/3/2018 10:00:00 AM
          updated_at: 1/3/2018 10:10:00 AM
          status: refunded
          subtotal: 60
          tax: 7.2
          total: 67.2
          currency: USD
    displayName: ListOrderResponse
    description: Response object of order for list action.
    type: Response
    properties:
      result:
        required: false
        displayName: result
        description: Result object of the response.
        type: array
        items:
          type: BasicOrderResult
  Amount:
    example:
      value:
        value: 10
        currency: USD
    displayName: Amount
    description: A complex object for amount.
    type: object
    properties:
      value:
        required: true
        displayName: value
        description: A decimal value with two decimals in the string representation of amount.
        type: number
        format: double
      currency:
        required: true
        displayName: currency
        description: ISO 4217 currency code of the amount.
        type: string
  Response:
    example:
      value:
        status: user_not_found
        message: User not found with given attributes
    displayName: Response
    description: A basic object of the response.
    type: object
    properties:
      status:
        required: true
        displayName: status
        description: The status of the response. The value is always "ok" for successful responses otherwise it includes error code.
        type: string
      message:
        required: false
        displayName: message
        description: The message of the error. It is always null for successful responses.
        type: string
  CartDiscount:
    example:
      value:
        discount: 10
        currency: USD
        discount_provision_token: dpt_edb17503-c804-48bf-b798-1d5e7d8757c7
    displayName: CartDiscount
    description: Representing a discount for shopping cart.
    type: object
    properties:
      currency:
        required: true
        displayName: currency
        description: ISO-4217 3-letter currency code.
        type: string
      discount:
        required: false
        displayName: discount
        description: Amount of the current discount.
        type: number
        format: double
      discount_provision_token:
        required: false
        displayName: discount_provision_token
        description: A token represents a discount object for provisioning.
        type: string
      items:
        required: false
        displayName: items
        description: An array of discounts for cart items.
        type: array
        items:
          type: CartItemDiscount
  Payment:
    example:
      value:
        payment_provision_token: ppt_4c558b3d-7146-4043-b559-4599434e2ad7
        created_at: 1/1/2018 10:00:00 AM
        updated_at: 1/1/2018 10:10:00 AM
        status: completed
        amount:
          value: 10
          currency: USD
    displayName: Payment
    description: Representing a payment.
    type: object
    properties:
      payment_provision_token:
        required: true
        displayName: payment_provision_token
        description: A token represents a payment object for provisioning.
        type: string
      created_at:
        required: true
        displayName: created_at
        description: Create date time of payment. The format is ISO 8601 date and time.
        type: string
      updated_at:
        required: true
        displayName: updated_at
        description: Last update date time of payment. The format is ISO 8601 date and time.
        type: string
      status:
        required: true
        displayName: status
        description: The status of payment.
        type: string
        enum:
        - started
        - completed
        - cancelled
        - refunded
        - used
      amount:
        required: true
        displayName: amount
        description: An amount of payment.
        type: Amount
  DiscountItem:
    example:
      value:
        type: loyalty_discount
        amount: 1
        discount_provision_token: dpt_edb17503-c804-48bf-b798-1d5e7d8757c7
    displayName: DiscountItem
    description: Representing a discount for order.
    type: object
    properties:
      type:
        required: true
        displayName: type
        description: Type of the discount.
        type: string
        enum:
        - loyalty_discount
        - other
      amount:
        required: true
        displayName: amount
        description: Amount of the current discount.
        type: number
        format: double
      discount_provision_token:
        required: false
        displayName: discount_provision_token
        description: A token represents a discount object for provisioning.
        type: string
  CartItemDiscount:
    example:
      value:
        id: 344187961
        discount: 1
    displayName: CartItemDiscount
    description: Representing a discount for shopping cart item.
    type: object
    properties:
      id:
        required: true
        displayName: id
        description: An identifier to reference this product.
        type: string
      discount:
        required: true
        displayName: discount
        description: Amount of the current discount.
        type: number
        format: double
  CartItem:
    example:
      value:
        id: 344187961
        quantity: 1
        price: 20
    displayName: CartItem
    description: Representing a shopping cart item.
    type: object
    properties:
      id:
        required: true
        displayName: id
        description: An identifier to reference this product. Universal product code.
        type: string
      quantity:
        required: true
        displayName: quantity
        description: The quantity of the item.
        type: number
        format: double
      price:
        required: true
        displayName: price
        description: The price of the item.
        type: number
        format: double
  StartReturnResult:
    example:
      value:
        return_provision_token: rpt_f4dd4f17-da27-4c61-af29-f7b116efa0ef
    displayName: StartReturnResult
    description: Result object of return for start action.
    type: object
    properties:
      return_provision_token:
        required: true
        displayName: return_provision_token
        description: A token represents a return object for provisioning.
        type: string
  StartReturnResponse:
    example:
      value:
        status: ok
        result:
          return_provision_token: rpt_f4dd4f17-da27-4c61-af29-f7b116efa0ef
    displayName: StartReturnResponse
    description: Response object of return for start action.
    type: Response
    properties:
      result:
        required: false
        displayName: result
        description: Result object of the response.
        type: StartReturnResult
  CartResult:
    example:
      value:
        available_amount:
          value: 100.2
          currency: USD
        cart_discount:
          discount: 10
          currency: USD
          discount_provision_token: dpt_edb17503-c804-48bf-b798-1d5e7d8757c7
    displayName: CartResult
    description: Result object of the response.
    type: object
    properties:
      available_amount:
        required: false
        displayName: available_amount
        description: The available amount of money for payment.
        type: Amount
      cart_discount:
        required: false
        displayName: cart_discount
        description: A discount object for cart.
        type: CartDiscount
  OAuthRequest:
    example:
      value:
        client_id: '{{client_id}}'
        client_secret: '{{client_secret}}'
        grant_type: '{{grant_type}}'
    displayName: OAuthRequest
    description: Representing an OAuth request.
    type: object
    properties:
      client_id:
        required: true
        displayName: client_id
        description: ID of the client which is provided by Global Miles.
        type: string
      client_secret:
        required: true
        displayName: client_secret
        description: Secret of the client which is provided by Global Miles.
        type: string
      grant_type:
        required: true
        default: client_credentials
        displayName: grant_type
        description: 'Type of the OAuth flows. We support only one type of token: client_credentials'
        type: string
  OAuthResponse:
    example:
      value:
        access_token: '{{access_token}}'
        token_type: bearer
        created_at: 1496737098
    displayName: OAuthResponse
    description: Representing an OAuth response.
    type: object
    properties:
      access_token:
        required: true
        displayName: access_token
        description: An access token from the authorization server.
        type: string
      token_type:
        required: true
        displayName: token_type
        description: The type of token this is, typically just the string "bearer".
        type: string
      created_at:
        required: true
        displayName: created_at
        description: The time in unix time format when the access token was created.
        type: string
  PaymentItem:
    example:
      value:
        type: mile_payment
        amount: 50
        payment_provision_token: ppt_4c558b3d-7146-4043-b559-4599434e2ad7
    displayName: PaymentItem
    description: Representing a payment for order.
    type: object
    properties:
      type:
        required: true
        displayName: type
        description: A type of payment.
        type: string
        enum:
        - credit_card
        - debit_card
        - bank_transfer
        - cash
        - digital_wallet
        - mobile_payment
        - gift_card
        - mile_payment
        - other
      amount:
        required: true
        displayName: amount
        description: Amount of current payment.
        type: number
        format: double
      payment_provision_token:
        required: false
        displayName: payment_provision_token
        description: A token represents a payment object for provisioning.
        type: string
  CartRequest:
    example:
      value:
        store_code: ECO123858493939
        user_token: b69c3393-54eb-471c-907d-8d4ed405f88e
        cart:
          subtotal: 90
          tax: 10.2
          total: 100.2
          currency: USD
          items:
          - id: 344187961
            quantity: 1
            price: 20
          - id: 344187960
            quantity: 2.2
            price: 0.91
          - id: 344187965
            quantity: 5
            price: 10
    displayName: CartRequest
    description: Request of the cart object.
    type: object
    properties:
      user_token:
        required: true
        displayName: user_token
        description: A token that is representing a Global Miles user for the current session.
        type: string
      store_code:
        required: true
        displayName: store_code
        description: An identifier for online store.
        type: string
      cart:
        required: true
        displayName: cart
        description: A complex object for cart.
        type: Cart
  OrderItem:
    example:
      value:
        id: 344187960
        quantity: 2.2
        price: 0.91
    displayName: OrderItem
    description: Representing an order item.
    type: object
    properties:
      id:
        required: true
        displayName: id
        description: An identifier to reference this product.
        type: string
      quantity:
        required: true
        displayName: quantity
        description: The quantity of the item.
        type: number
        format: double
      price:
        required: true
        displayName: price
        description: The price of the item.
        type: number
        format: double
  OrderRequest:
    example:
      value:
        store_code: ECO123858493939
        user_token: ut_345021fb-9ed2-4c55-841e-3ffa95ca83bf
        order:
          transaction_id: 6c1a75f2-d7de-4ac1-80e0-60ac83f7e083
          completed_at: 1/1/2018 10:00:00 AM
          subtotal: 90
          tax: 10.2
          total: 100.2
          currency: USD
          items:
          - id: 344187961
            quantity: 1
            price: 20
          - id: 344187960
            quantity: 2.2
            price: 0.91
          - id: 344187965
            quantity: 5
            price: 10
          discounts:
          - type: other
            amount: 1.5
          - type: loyalty_discount
            amount: 1
            discount_provision_token: dpt_edb17503-c804-48bf-b798-1d5e7d8757c7
          payments:
          - type: cash
            amount: 25.5
          - type: mile_payment
            amount: 50
            payment_provision_token: ppt_4c558b3d-7146-4043-b559-4599434e2ad7
    displayName: OrderRequest
    description: Request of order object.
    type: object
    properties:
      store_code:
        required: true
        displayName: store_code
        description: An identifier for online store.
        type: string
      user_token:
        required: true
        displayName: user_token
        description: A token that is representing a Global Miles user for the current session.
        type: string
      order:
        required: true
        displayName: order
        description: A complex object for order.
        type: Order
  BasicOrderResult:
    example:
      value:
        transaction_token: ort_b3b45895-f961-4cde-b9df-5b274fb757e7
        transaction_id: 6c1a75f2-d7de-4ac1-80e0-60ac83f7e083
        completed_at: 1/1/2018 9:00:00 AM
        created_at: 1/1/2018 10:00:00 AM
        updated_at: 1/1/2018 10:10:00 AM
        status: processed
        subtotal: 90
        tax: 10.2
        total: 100.2
        currency: USD
    displayName: BasicOrderResult
    description: Representing an order in list result.
    type: object
    properties:
      transaction_token:
        required: true
        displayName: transaction_token
        description: A token represents an order object from Global Miles system.
        type: string
      transaction_id:
        required: true
        displayName: transaction_id
        description: The ID of the transaction that represents the order.
        type: string
      completed_at:
        required: true
        displayName: completed_at
        description: The date and time when the order was completed in partner side.
        type: string
      created_at:
        required: true
        displayName: created_at
        description: Create date time of order. The format is ISO 8601 date and time.
        type: string
      updated_at:
        required: true
        displayName: updated_at
        description: Last update date time of order. The format is ISO 8601 date and time.
        type: string
      status:
        required: true
        displayName: status
        description: The status of order.
        type: string
        enum:
        - pending
        - refunded
        - processed
        - partially_refunded
      subtotal:
        required: true
        displayName: subtotal
        description: Total value of all order items without tax.
        type: number
        format: double
      tax:
        required: true
        displayName: tax
        description: The amount of tax.
        type: number
        format: double
      total:
        required: true
        displayName: total
        description: Total amount of order.
        type: number
        format: double
      currency:
        required: true
        displayName: currency
        description: ISO-4217 3-letter currency code.
        type: string
  Cart:
    example:
      value:
        subtotal: 90
        tax: 10.2
        total: 100.2
        currency: USD
        items:
        - id: 344187961
          quantity: 1
          price: 20
        - id: 344187960
          quantity: 2.2
          price: 0.91
        - id: 344187965
          quantity: 5
          price: 10
    displayName: Cart
    description: Representing a shopping cart.
    type: object
    properties:
      subtotal:
        required: true
        displayName: subtotal
        description: Total value of all cart items without tax.
        type: number
        format: double
      tax:
        required: true
        displayName: tax
        description: The amount of tax.
        type: number
        format: double
      total:
        required: true
        displayName: total
        description: Total amount of cart.
        type: number
        format: double
      currency:
        required: true
        displayName: currency
        description: ISO-4217 3-letter currency code.
        type: string
      items:
        required: false
        displayName: items
        description: An array of cart items.
        type: array
        items:
          type: CartItem
  Order:
    example:
      value:
        transaction_id: 6c1a75f2-d7de-4ac1-80e0-60ac83f7e083
        completed_at: 1/1/2018 10:00:00 AM
        subtotal: 90
        tax: 10.2
        total: 100.2
        currency: USD
        items:
        - id: 344187961
          quantity: 1
          price: 20
        - id: 344187960
          quantity: 2.2
          price: 0.91
        - id: 344187965
          quantity: 5
          price: 10
        payments:
        - type: cash
          amount: 25.5
        - type: mile_payment
          amount: 50
          payment_provision_token: ppt_4c558b3d-7146-4043-b559-4599434e2ad7
        discounts:
        - type: other
          amount: 1.5
        - type: loyalty_discount
          amount: 1
          discount_provision_token: dpt_edb17503-c804-48bf-b798-1d5e7d8757c7
    displayName: Order
    description: Representing an order.
    type: object
    properties:
      transaction_id:
        required: true
        displayName: transaction_id
        description: The ID of the transaction that represents the order.
        type: string
      completed_at:
        required: true
        displayName: completed_at
        description: The date and time when the order was completed in partner side.
        type: string
      subtotal:
        required: true
        displayName: subtotal
        description: Total value of all order items without tax.
        type: number
        format: double
      tax:
        required: true
        displayName: tax
        description: The amount of tax.
        type: number
        format: double
      total:
        required: true
        displayName: total
        description: Total amount of order.
        type: number
        format: double
      currency:
        required: true
        displayName: currency
        description: ISO-4217 3-letter currency code.
        type: string
      items:
        required: false
        displayName: items
        description: An array of order items.
        type: array
        items:
          type: OrderItem
      discounts:
        required: false
        displayName: discounts
        description: An array of discount items.
        type: array
        items:
          type: DiscountItem
      payments:
        required: false
        displayName: payments
        description: An array of payment items.
        type: array
        items:
          type: PaymentItem
  CartResponse:
    example:
      value:
        status: ok
        result:
          available_amount:
            value: 100.2
            currency: USD
          cart_discount:
            discount: 10
            currency: USD
            discount_provision_token: dpt_edb17503-c804-48bf-b798-1d5e7d8757c7
    displayName: CartResponse
    description: Response object of the cart.
    type: Response
    properties:
      result:
        required: false
        displayName: result
        description: Result object of the response.
        type: CartResult
  StartReturnRequest:
    example:
      value:
        store_code: ECO123858493939
        transaction_id: 6c1a75f2-d7de-4ac1-80e0-60ac83f7e083
        amount:
          value: 10
          currency: USD
    displayName: StartReturnRequest
    description: Request of return for start action.
    type: object
    properties:
      store_code:
        required: true
        displayName: store_code
        description: An identifier for online store.
        type: string
      transaction_id:
        required: true
        displayName: transaction_id
        description: The ID of the transaction that represents the order.
        type: string
      amount:
        required: false
        displayName: amount
        description: An amount of the return.
        type: Amount
  CompleteReturnRequest:
    example:
      value:
        store_code: ECO123858493939
        return_provision_token: rpt_f4dd4f17-da27-4c61-af29-f7b116efa0ef
    displayName: CompleteReturnRequest
    description: Request of return for complete action.
    type: object
    properties:
      store_code:
        required: true
        displayName: store_code
        description: An identifier for online store.
        type: string
      return_provision_token:
        required: true
        displayName: return_provision_token
        description: A token represents a return object for provisioning.
        type: string
  ListMilePaymentResponse:
    example:
      value:
        status: ok
        result:
        - payment_provision_token: ppt_4c558b3d-7146-4043-b559-4599434e2ad7
          created_at: 1/1/2018 10:00:00 AM
          updated_at: 1/1/2018 10:10:00 AM
          status: completed
          amount:
            value: 10
            currency: USD
        - payment_provision_token: ppt_0d64fa6f-8871-4a3f-be3b-5a7c97853d10
          created_at: 12/1/2017 11:00:00 PM
          updated_at: 12/2/2017 2:00:00 PM
          status: refunded
          amount:
            value: 20
            currency: USD
        - payment_provision_token: ppt_dadd0d63-dddf-4e82-b483-5c2aca9fb5a5
          created_at: 11/1/2017 12:00:00 PM
          updated_at: 11/1/2017 12:05:00 PM
          status: cancelled
          amount:
            value: 23
            currency: USD
    displayName: ListMilePaymentResponse
    description: Response object of payment for list action.
    type: Response
    properties:
      result:
        required: false
        displayName: result
        description: Result object of the response.
        type: array
        items:
          type: Payment
/oauth/token:
  post:
    displayName: Authentication
    description: |
      An access token will allow you to make requests for the system. We support only one type of token: client_credentials.


      You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
    body:
      application/json:
        example:
          value:
            client_id: '{{client_id}}'
            client_secret: '{{client_secret}}'
            grant_type: '{{grant_type}}'
        displayName: Body
        description: The body of the request.
        type: OAuthRequest
    headers:
      Accept:
        required: true
        default: application/json
        example:
          value: application/json
        displayName: Accept
        description: It advertises which content type is able to understand.
        type: string
      Content-Type:
        required: true
        default: application/json
        example:
          value: application/json
        displayName: Content-Type
        description: It tells the client what the content type of the returned.
        type: string
    responses:
      200:
        description: Success
        body:
          application/json:
            example:
              value:
                access_token: '{{access_token}}'
                token_type: bearer
                created_at: 1496737098
            displayName: Response
            type: OAuthResponse
      400:
        description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
        body: {}
      401:
        description: Unauthorized - No valid API key provided.
        body: {}
      402:
        description: Request Failed - The parameters were valid but the request failed.
        body: {}
      404:
        description: Not Found - The requested resource doesn't exist.
        body: {}
      429:
        description: Too Many Requests - Too many requests hit the API too quickly.
        body: {}
      500:
        description: Server Error - Something went wrong.
        body: {}
/v1/ecommerce/returns/{return_provision_token}:
  uriParameters:
    return_provision_token:
      required: true
      example:
        value: rpt_f4dd4f17-da27-4c61-af29-f7b116efa0ef
      displayName: return_provision_token
      description: The token value of a return.
      type: string
  get:
    displayName: Retrieve Return
    description: |
      This endpoint allows to get a return.


      You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
    securedBy:
    - auth
    responses:
      200:
        description: Success
        body:
          application/json:
            example:
              value:
                status: ok
                result:
                  return_provision_token: rpt_f4dd4f17-da27-4c61-af29-f7b116efa0ef
                  transaction_id: 6c1a75f2-d7de-4ac1-80e0-60ac83f7e083
                  created_at: 1/1/2018 10:00:00 AM
                  updated_at: 1/1/2018 10:10:00 AM
                  status: completed
                  amount:
                    value: 10
                    currency: USD
            displayName: response
            type: RetrieveReturnResponse
      400:
        description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
        body: {}
      401:
        description: Unauthorized - No valid API key provided.
        body: {}
      402:
        description: Request Failed - The parameters were valid but the request failed.
        body: {}
      404:
        description: Not Found - The requested resource doesn't exist.
        body: {}
      429:
        description: Too Many Requests - Too many requests hit the API too quickly.
        body: {}
      500:
        description: Server Error - Something went wrong.
        body: {}
/v2/ecommerce:
  /orders:
    get:
      displayName: List Orders
      description: |
        This endpoint allows to get list of orders. In order to get detailed order history and reconciliation you can use this endpoint.


        You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      securedBy:
      - auth
      queryParameters:
        filter[store_code]:
          required: true
          example:
            value: ECO123858493939
          displayName: filter[store_code]
          description: Filter for an online store.
          type: string
        filter[completed_at]:
          required: true
          example:
            value: 2017-01-01..2019-01-01
          displayName: filter[completed_at]
          description: Filter for completed_at field. It is accepted a valid date range value. The format is YYYY-MM-DD..YYYY-MM-DD.
          type: string
        filter[status]:
          required: false
          example:
            value: processed
          displayName: filter[status]
          description: Filter for status field. It is accepted a valid status value of order.
          type: string
        sort:
          required: false
          example:
            value: -completed_at
          displayName: sort
          description: Sort for some selected fields. In order to sort descending "-" value will be used before the field. Valid field values are "completed_at", "created_at",  "updated_at", "status".
          type: string
      responses:
        200:
          description: Success
          body:
            application/json:
              example:
                value:
                  status: ok
                  result:
                  - transaction_token: ort_b3b45895-f961-4cde-b9df-5b274fb757e7
                    transaction_id: 6c1a75f2-d7de-4ac1-80e0-60ac83f7e083
                    completed_at: 1/1/2018 9:00:00 AM
                    created_at: 1/1/2018 10:00:00 AM
                    updated_at: 1/1/2018 10:10:00 AM
                    status: processed
                    subtotal: 90
                    tax: 10.2
                    total: 100.2
                    currency: USD
                  - transaction_token: ot_fd7bc94b-4fe4-4c5a-89fa-85ce017c2b0b
                    transaction_id: 42db67d6-fde6-47ce-81eb-121cf333e0d7
                    completed_at: 1/2/2018 9:00:00 AM
                    created_at: 1/2/2018 10:00:00 AM
                    updated_at: 1/2/2018 10:10:00 AM
                    status: processed
                    subtotal: 70
                    tax: 8.2
                    total: 78.2
                    currency: USD
                  - transaction_token: ot_e59410fb-831a-47d2-9822-9de6efd3e39e
                    transaction_id: 51424457-4997-4fa2-aed0-1a71aff88294
                    completed_at: 1/3/2018 9:00:00 AM
                    created_at: 1/3/2018 10:00:00 AM
                    updated_at: 1/3/2018 10:10:00 AM
                    status: refunded
                    subtotal: 60
                    tax: 7.2
                    total: 67.2
                    currency: USD
              displayName: response
              type: ListOrderResponse
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          body: {}
        401:
          description: Unauthorized - No valid API key provided.
          body: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          body: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          body: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          body: {}
        500:
          description: Server Error - Something went wrong.
          body: {}
    post:
      displayName: Order
      description: |
        This endpoint allows to create an order for earn miles. It may also include discounts and payments.


        You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      body:
        application/json:
          example:
            value:
              store_code: ECO123858493939
              user_token: ut_345021fb-9ed2-4c55-841e-3ffa95ca83bf
              order:
                transaction_id: 6c1a75f2-d7de-4ac1-80e0-60ac83f7e083
                completed_at: 1/1/2018 10:00:00 AM
                subtotal: 90
                tax: 10.2
                total: 100.2
                currency: USD
                items:
                - id: 344187961
                  quantity: 1
                  price: 20
                - id: 344187960
                  quantity: 2.2
                  price: 0.91
                - id: 344187965
                  quantity: 5
                  price: 10
                payments:
                - type: cash
                  amount: 25.5
                - type: mile_payment
                  amount: 50
                  payment_provision_token: ppt_4c558b3d-7146-4043-b559-4599434e2ad7
                discounts:
                - type: other
                  amount: 1.5
                - type: loyalty_discount
                  amount: 1
                  discount_provision_token: dpt_edb17503-c804-48bf-b798-1d5e7d8757c7
          displayName: Body
          description: The body of the request.
          type: OrderRequest
      securedBy:
      - auth
      responses:
        200:
          description: Success
          body:
            application/json:
              example:
                value:
                  status: ok
                  result:
                    transaction_token: ort_b3b45895-f961-4cde-b9df-5b274fb757e7
              displayName: response
              type: OrderResponse
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          body: {}
        401:
          description: Unauthorized - No valid API key provided.
          body: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          body: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          body: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          body: {}
        500:
          description: Server Error - Something went wrong.
          body: {}
    /{transaction_id}:
      uriParameters:
        transaction_id:
          required: true
          example:
            value: 6c1a75f2-d7de-4ac1-80e0-60ac83f7e083
          displayName: transaction_id
          description: The ID of the transaction that represents the order.
          type: string
      get:
        displayName: Retrieve Order
        description: |
          This endpoint allows to get an order.


          You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
        securedBy:
        - auth
        responses:
          200:
            description: Success
            body:
              application/json:
                example:
                  value:
                    status: ok
                    result:
                      transaction_token: ort_b3b45895-f961-4cde-b9df-5b274fb757e7
                      transaction_id: 6c1a75f2-d7de-4ac1-80e0-60ac83f7e083
                      completed_at: 1/1/2018 9:00:00 AM
                      created_at: 1/1/2018 10:00:00 AM
                      updated_at: 1/1/2018 10:10:00 AM
                      status: processed
                      subtotal: 90
                      tax: 10.2
                      total: 100.2
                      currency: USD
                displayName: response
                type: RetrieveOrderResponse
          400:
            description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
            body: {}
          401:
            description: Unauthorized - No valid API key provided.
            body: {}
          402:
            description: Request Failed - The parameters were valid but the request failed.
            body: {}
          404:
            description: Not Found - The requested resource doesn't exist.
            body: {}
          429:
            description: Too Many Requests - Too many requests hit the API too quickly.
            body: {}
          500:
            description: Server Error - Something went wrong.
            body: {}
  /payments:
    get:
      displayName: List Mile Payments
      description: |
        This endpoint allows to get list of payments. In order to get detailed payment history and reconciliation you can use this endpoint.


        You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      securedBy:
      - auth
      queryParameters:
        filter[store_code]:
          required: true
          example:
            value: ECO123858493939
          displayName: filter[store_code]
          description: Filter for an online store.
          type: string
        filter[created_at]:
          required: true
          example:
            value: 2017-01-01..2019-01-01
          displayName: filter[created_at]
          description: Filter for created_at field. It is accepted a valid date range value. The format is YYYY-MM-DD..YYYY-MM-DD.
          type: string
        filter[status]:
          required: false
          example:
            value: completed
          displayName: filter[status]
          description: Filter for status field. It is accepted a valid status value of payment.
          type: string
        sort:
          required: false
          example:
            value: created_at
          displayName: sort
          description: Sort for some selected fields. In order to sort descending "-" value will be used before the field. Valid field values are "created_at",  "updated_at", "status".
          type: string
      responses:
        200:
          description: Success
          body:
            application/json:
              example:
                value:
                  status: ok
                  result:
                  - payment_provision_token: ppt_4c558b3d-7146-4043-b559-4599434e2ad7
                    created_at: 1/1/2018 10:00:00 AM
                    updated_at: 1/1/2018 10:10:00 AM
                    status: completed
                    amount:
                      value: 10
                      currency: USD
                  - payment_provision_token: ppt_0d64fa6f-8871-4a3f-be3b-5a7c97853d10
                    created_at: 12/1/2017 11:00:00 PM
                    updated_at: 12/2/2017 2:00:00 PM
                    status: refunded
                    amount:
                      value: 20
                      currency: USD
                  - payment_provision_token: ppt_dadd0d63-dddf-4e82-b483-5c2aca9fb5a5
                    created_at: 11/1/2017 12:00:00 PM
                    updated_at: 11/1/2017 12:05:00 PM
                    status: cancelled
                    amount:
                      value: 23
                      currency: USD
              displayName: response
              type: ListMilePaymentResponse
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          body: {}
        401:
          description: Unauthorized - No valid API key provided.
          body: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          body: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          body: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          body: {}
        500:
          description: Server Error - Something went wrong.
          body: {}
    put:
      displayName: Complete Mile Payment
      description: |
        This endpoint allows to complete a payment.


        You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      body:
        application/json:
          example:
            value:
              store_code: ECO123858493939
              payment_provision_token: ppt_4c558b3d-7146-4043-b559-4599434e2ad7
          displayName: Body
          description: The body of the request.
          type: CompleteMilePaymentRequest
      securedBy:
      - auth
      responses:
        200:
          description: Success
          body:
            application/json:
              example:
                value:
                  status: ok
              displayName: response
              type: Response
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          body: {}
        401:
          description: Unauthorized - No valid API key provided.
          body: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          body: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          body: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          body: {}
        500:
          description: Server Error - Something went wrong.
          body: {}
    post:
      displayName: Start Mile Payment
      description: |
        After successful authentication and retrieving needed token, this endpoint allows to start a payment transaction. To be able to complete whole payment process successfully also check "Complete Mile Payment endpoint" please.


        You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      body:
        application/json:
          example:
            value:
              store_code: ECO123858493939
              user_token: ut_345021fb-9ed2-4c55-841e-3ffa95ca83bf
              amount:
                value: 10
                currency: USD
          displayName: Body
          description: The body of the request.
          type: StartMilePaymentRequest
      securedBy:
      - auth
      responses:
        200:
          description: Success
          body:
            application/json:
              example:
                value:
                  status: ok
                  result:
                    payment_provision_token: ppt_4c558b3d-7146-4043-b559-4599434e2ad7
              displayName: response
              type: StartMilePaymentResponse
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          body: {}
        401:
          description: Unauthorized - No valid API key provided.
          body: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          body: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          body: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          body: {}
        500:
          description: Server Error - Something went wrong.
          body: {}
    delete:
      displayName: Cancel Mile Payment
      description: |
        This endpoint allows to cancel a payment.


        You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      body:
        application/json:
          example:
            value:
              store_code: ECO123858493939
              payment_provision_token: ppt_4c558b3d-7146-4043-b559-4599434e2ad7
          displayName: Body
          description: The body of the request.
          type: CancelMilePaymentRequest
      securedBy:
      - auth
      responses:
        200:
          description: Success
          body:
            application/json:
              example:
                value:
                  status: ok
              displayName: response
              type: Response
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          body: {}
        401:
          description: Unauthorized - No valid API key provided.
          body: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          body: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          body: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          body: {}
        500:
          description: Server Error - Something went wrong.
          body: {}
    /actions/refund:
      post:
        displayName: Refund Mile Payment
        description: |
          This endpoint allows to refund a payment.


          You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
        body:
          application/json:
            example:
              value:
                store_code: ECO123858493939
                payment_provision_token: ppt_4c558b3d-7146-4043-b559-4599434e2ad7
                amount:
                  value: 10
                  currency: USD
            displayName: Body
            description: The body of the request.
            type: RefundMilePaymentRequest
        securedBy:
        - auth
        responses:
          200:
            description: Success
            body:
              application/json:
                example:
                  value:
                    status: ok
                displayName: response
                type: Response
          400:
            description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
            body: {}
          401:
            description: Unauthorized - No valid API key provided.
            body: {}
          402:
            description: Request Failed - The parameters were valid but the request failed.
            body: {}
          404:
            description: Not Found - The requested resource doesn't exist.
            body: {}
          429:
            description: Too Many Requests - Too many requests hit the API too quickly.
            body: {}
          500:
            description: Server Error - Something went wrong.
            body: {}
  /returns:
    get:
      displayName: List Returns
      description: |
        This endpoint allows to get list of returns. In order to get detailed return history and reconciliation you can use this endpoint.


        You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      securedBy:
      - auth
      queryParameters:
        filter[store_code]:
          required: true
          example:
            value: ECO123858493939
          displayName: filter[store_code]
          description: Filter for an online store.
          type: string
        filter[created_at]:
          required: true
          example:
            value: 2017-01-01..2018-01-01
          displayName: filter[created_at]
          description: Filter for created_at field. It is accepted a valid date range value. The format is YYYY-MM-DD..YYYY-MM-DD.
          type: string
        filter[status]:
          required: false
          example:
            value: completed
          displayName: filter[status]
          description: Filter for status field. It is accepted a valid status value of return.
          type: string
        sort:
          required: false
          example:
            value: -created_at
          displayName: sort
          description: Sort for some selected fields. In order to sort descending "-" value will be used before the field. Valid field values are "created_at",  "updated_at", "status".
          type: string
      responses:
        200:
          description: Success
          body:
            application/json:
              example:
                value:
                  status: ok
                  result:
                  - return_provision_token: rpt_f4dd4f17-da27-4c61-af29-f7b116efa0ef
                    transaction_id: 6c1a75f2-d7de-4ac1-80e0-60ac83f7e083
                    created_at: 1/1/2018 10:00:00 AM
                    updated_at: 1/1/2018 10:10:00 AM
                    status: completed
                    amount:
                      value: 10
                      currency: USD
                  - return_provision_token: rpt_a0d2070b-0676-4131-b315-c9d653a31505
                    transaction_id: 42db67d6-fde6-47ce-81eb-121cf333e0d7
                    created_at: 1/2/2018 10:00:00 AM
                    updated_at: 1/2/2018 10:10:00 AM
                    status: cancelled
                    amount:
                      value: 10
                      currency: USD
                  - return_provision_token: rpt_0399bad5-fac3-45dd-88af-99604b153355
                    transaction_id: 51424457-4997-4fa2-aed0-1a71aff88294
                    created_at: 1/3/2018 10:00:00 AM
                    updated_at: 1/3/2018 10:10:00 AM
                    status: completed
                    residual:
                      value: 5
                      currency: USD
              displayName: response
              type: ListReturnResponse
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          body: {}
        401:
          description: Unauthorized - No valid API key provided.
          body: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          body: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          body: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          body: {}
        500:
          description: Server Error - Something went wrong.
          body: {}
    put:
      displayName: Complete Return
      description: |
        This endpoint allows to complete a return.


        You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      body:
        application/json:
          example:
            value:
              store_code: ECO123858493939
              return_provision_token: rpt_f4dd4f17-da27-4c61-af29-f7b116efa0ef
          displayName: Body
          description: The body of the request.
          type: CompleteReturnRequest
      securedBy:
      - auth
      responses:
        200:
          description: Success
          body:
            application/json:
              example:
                value:
                  status: ok
              displayName: response
              type: Response
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          body: {}
        401:
          description: Unauthorized - No valid API key provided.
          body: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          body: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          body: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          body: {}
        500:
          description: Server Error - Something went wrong.
          body: {}
    post:
      displayName: Start Return
      description: |
        This endpoint allows to start a return for a specific order.


        You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      body:
        application/json:
          example:
            value:
              store_code: ECO123858493939
              transaction_id: 6c1a75f2-d7de-4ac1-80e0-60ac83f7e083
              amount:
                value: 10
                currency: USD
          displayName: Body
          description: The body of the request.
          type: StartReturnRequest
      securedBy:
      - auth
      responses:
        200:
          description: Success
          body:
            application/json:
              example:
                value:
                  status: ok
                  result:
                    return_provision_token: rpt_f4dd4f17-da27-4c61-af29-f7b116efa0ef
              displayName: response
              type: StartReturnResponse
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          body: {}
        401:
          description: Unauthorized - No valid API key provided.
          body: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          body: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          body: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          body: {}
        500:
          description: Server Error - Something went wrong.
          body: {}
    delete:
      displayName: Cancel Return
      description: |
        This endpoint allows to cancel a return.


        You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      body:
        application/json:
          example:
            value:
              store_code: ECO123858493939
              return_provision_token: rpt_f4dd4f17-da27-4c61-af29-f7b116efa0ef
          displayName: Body
          description: The body of the request.
          type: CancelReturnRequest
      securedBy:
      - auth
      responses:
        200:
          description: Success
          body:
            application/json:
              example:
                value:
                  status: ok
              displayName: response
              type: Response
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          body: {}
        401:
          description: Unauthorized - No valid API key provided.
          body: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          body: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          body: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          body: {}
        500:
          description: Server Error - Something went wrong.
          body: {}
  /carts:
    post:
      displayName: Cart
      description: |
        This endpoint allows to get available amount of money, based on miles of user and their discounts which is based on cart or items.


        You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      body:
        application/json:
          example:
            value:
              store_code: ECO123858493939
              user_token: ut_345021fb-9ed2-4c55-841e-3ffa95ca83bf
              cart:
                subtotal: 90
                tax: 10.2
                total: 100.2
                currency: USD
                items:
                - id: 344187961
                  quantity: 1
                  price: 20
                - id: 344187960
                  quantity: 2.2
                  price: 0.91
                - id: 344187965
                  quantity: 5
                  price: 10
          displayName: Body
          description: The body of the request.
          type: CartRequest
      securedBy:
      - auth
      responses:
        200:
          description: Success
          body:
            application/json:
              example:
                value:
                  status: ok
                  result:
                    available_point:
                      value: 100.2
                      currency: USD
                    cart_discount:
                      discount: 10
                      currency: USD
                      discount_provision_token: dpt_edb17503-c804-48bf-b798-1d5e7d8757c7
              displayName: Response
              type: CartResponse
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          body: {}
        401:
          description: Unauthorized - No valid API key provided.
          body: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          body: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          body: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          body: {}
        500:
          description: Server Error - Something went wrong.
          body: {}
