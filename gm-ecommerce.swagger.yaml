swagger: '2.0'
info:
  version: '2.1.0'
  title: Global Miles E-commerce API
  description: API for E-commerce Partners. This document includes Cart, Discount, Payment, Order and Return related endpoints provided by Global Miles.
host: api.sandbox.globalmiles.com
basePath: /
securityDefinitions:
  auth:
    type: oauth2
    flow: application
    tokenUrl: https://api.sandbox.globalmiles.com/oauth/token
    scopes: {}
    x-skip-client-authentication: false
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  /v2/ecommerce/orders:
    get:
      description: >-
        This endpoint allows to get list of orders. In order to get detailed order history and reconciliation you can use this endpoint.


        You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      summary: List Orders
      tags:
      - Earn Miles
      operationId: V2EcommerceOrdersGet
      produces:
      - application/json
      parameters:
      - name: filter[store_code]
        in: query
        required: true
        type: string
        description: Filter for an online store.
      - name: filter[completed_at]
        in: query
        required: true
        type: string
        description: Filter for completed_at field. It is accepted a valid date range value. The format is YYYY-MM-DD..YYYY-MM-DD.
      - name: filter[status]
        in: query
        required: false
        type: string
        description: Filter for status field. It is accepted a valid status value of order.
      - name: sort
        in: query
        required: false
        type: string
        description: Sort for some selected fields. In order to sort descending "-" value will be used before the field. Valid field values are "completed_at", "created_at",  "updated_at", "status".
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ListOrderResponse'
          examples:
            application/json:
              status: ok
              result:
              - transaction_token: ort_b3b45895-f961-4cde-b9df-5b274fb757e7
                transaction_id: 6c1a75f2-d7de-4ac1-80e0-60ac83f7e083
                completed_at: 2018-01-01T09:00:00.0000000
                created_at: 2018-01-01T10:00:00.0000000
                updated_at: 2018-01-01T10:10:00.0000000
                status: processed
                subtotal: 90
                tax: 10.199999999999999
                total: 100.2
                currency: USD
              - transaction_token: ot_fd7bc94b-4fe4-4c5a-89fa-85ce017c2b0b
                transaction_id: 42db67d6-fde6-47ce-81eb-121cf333e0d7
                completed_at: 2018-01-02T09:00:00.0000000
                created_at: 2018-01-02T10:00:00.0000000
                updated_at: 2018-01-02T10:10:00.0000000
                status: processed
                subtotal: 70
                tax: 8.1999999999999993
                total: 78.200000000000003
                currency: USD
              - transaction_token: ot_e59410fb-831a-47d2-9822-9de6efd3e39e
                transaction_id: 51424457-4997-4fa2-aed0-1a71aff88294
                completed_at: 2018-01-03T09:00:00.0000000
                created_at: 2018-01-03T10:00:00.0000000
                updated_at: 2018-01-03T10:10:00.0000000
                status: refunded
                subtotal: 60
                tax: 7.2000000000000002
                total: 67.200000000000003
                currency: USD
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          schema: {}
        401:
          description: Unauthorized - No valid API key provided.
          schema: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          schema: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          schema: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          schema: {}
        default:
          description: Server Error - Something went wrong.
          schema: {}
      security:
      - auth: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: >-
        This endpoint allows to create an order for earn miles. It may also include discounts and payments.


        You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      summary: Order
      tags:
      - Earn Miles
      operationId: V2EcommerceOrdersPost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: The body of the request.
        schema:
          $ref: '#/definitions/OrderRequest'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/OrderResponse'
          examples:
            application/json:
              status: ok
              result:
                transaction_token: ort_b3b45895-f961-4cde-b9df-5b274fb757e7
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          schema: {}
        401:
          description: Unauthorized - No valid API key provided.
          schema: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          schema: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          schema: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          schema: {}
        default:
          description: Server Error - Something went wrong.
          schema: {}
      security:
      - auth: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /oauth/token:
    post:
      description: >-
        An access token will allow you to make requests for the system. We support only one type of token: client_credentials.


        You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      summary: Authentication
      tags:
      - Authentication
      operationId: OauthTokenPost
      produces:
      - application/json
      parameters:
      - name: Accept
        in: header
        required: true
        default: application/json
        type: string
        description: It advertises which content type is able to understand.
      - name: Content-Type
        in: header
        required: true
        default: application/json
        type: string
        description: It tells the client what the content type of the returned.
      - name: Body
        in: body
        required: true
        description: The body of the request.
        schema:
          $ref: '#/definitions/OAuthRequest'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/OAuthResponse'
          examples:
            application/json:
              access_token: '{{access_token}}'
              token_type: bearer
              created_at: 1496737098
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          schema: {}
        401:
          description: Unauthorized - No valid API key provided.
          schema: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          schema: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          schema: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          schema: {}
        default:
          description: Server Error - Something went wrong.
          schema: {}
      security: []
      x-unitTests:
      - request:
          method: POST
          uri: /oauth/token
          headers:
            Content-Type: application/json
            Accept: application/json
          body: >-
            {
              "client_id": "{{client_id}}",
              "client_secret": "{{client_secret}}",
              "grant_type": "{{grant_type}}"
            }
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: false
        x-testName: Authentication
        x-testDescription: 'An access token will allow you to make requests for the system. We support only one type of token: client_credentials'
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v1/ecommerce/returns/{return_provision_token}:
    get:
      description: >-
        This endpoint allows to get a return.


        You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      summary: Retrieve Return
      tags:
      - Return
      operationId: V1EcommerceReturnsByReturnProvisionTokenGet
      produces:
      - application/json
      parameters:
      - name: return_provision_token
        in: path
        required: true
        type: string
        description: The token value of a return.
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/RetrieveReturnResponse'
          examples:
            application/json:
              status: ok
              result:
                return_provision_token: rpt_f4dd4f17-da27-4c61-af29-f7b116efa0ef
                transaction_id: 6c1a75f2-d7de-4ac1-80e0-60ac83f7e083
                created_at: 2018-01-01T10:00:00.0000000
                updated_at: 2018-01-01T10:10:00.0000000
                status: completed
                amount:
                  value: 10
                  currency: USD
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          schema: {}
        401:
          description: Unauthorized - No valid API key provided.
          schema: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          schema: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          schema: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          schema: {}
        default:
          description: Server Error - Something went wrong.
          schema: {}
      security:
      - auth: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v2/ecommerce/payments:
    get:
      description: >-
        This endpoint allows to get list of payments. In order to get detailed payment history and reconciliation you can use this endpoint.


        You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      summary: List Mile Payments
      tags:
      - Pay with Miles
      operationId: V2EcommercePaymentsGet
      produces:
      - application/json
      parameters:
      - name: filter[store_code]
        in: query
        required: true
        type: string
        description: Filter for an online store.
      - name: filter[created_at]
        in: query
        required: true
        type: string
        description: Filter for created_at field. It is accepted a valid date range value. The format is YYYY-MM-DD..YYYY-MM-DD.
      - name: filter[status]
        in: query
        required: false
        type: string
        description: Filter for status field. It is accepted a valid status value of payment.
      - name: sort
        in: query
        required: false
        type: string
        description: Sort for some selected fields. In order to sort descending "-" value will be used before the field. Valid field values are "created_at",  "updated_at", "status".
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ListMilePaymentResponse'
          examples:
            application/json:
              status: ok
              result:
              - payment_provision_token: ppt_4c558b3d-7146-4043-b559-4599434e2ad7
                created_at: 2018-01-01T10:00:00.0000000
                updated_at: 2018-01-01T10:10:00.0000000
                status: completed
                amount:
                  value: 10
                  currency: USD
              - payment_provision_token: ppt_0d64fa6f-8871-4a3f-be3b-5a7c97853d10
                created_at: 2017-12-01T23:00:00.0000000
                updated_at: 2017-12-02T14:00:00.0000000
                status: refunded
                amount:
                  value: 20
                  currency: USD
              - payment_provision_token: ppt_dadd0d63-dddf-4e82-b483-5c2aca9fb5a5
                created_at: 2017-11-01T12:00:00.0000000
                updated_at: 2017-11-01T12:05:00.0000000
                status: cancelled
                amount:
                  value: 23
                  currency: USD
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          schema: {}
        401:
          description: Unauthorized - No valid API key provided.
          schema: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          schema: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          schema: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          schema: {}
        default:
          description: Server Error - Something went wrong.
          schema: {}
      security:
      - auth: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: >-
        This endpoint allows to complete a payment.


        You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      summary: Complete Mile Payment
      tags:
      - Pay with Miles
      operationId: V2EcommercePaymentsPut
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: The body of the request.
        schema:
          $ref: '#/definitions/CompleteMilePaymentRequest'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Response'
          examples:
            application/json:
              status: ok
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          schema: {}
        401:
          description: Unauthorized - No valid API key provided.
          schema: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          schema: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          schema: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          schema: {}
        default:
          description: Server Error - Something went wrong.
          schema: {}
      security:
      - auth: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: >-
        After successful authentication and retrieving needed token, this endpoint allows to start a payment transaction. To be able to complete whole payment process successfully also check "Complete Mile Payment endpoint" please.


        You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      summary: Start Mile Payment
      tags:
      - Pay with Miles
      operationId: V2EcommercePaymentsPost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: The body of the request.
        schema:
          $ref: '#/definitions/StartMilePaymentRequest'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/StartMilePaymentResponse'
          examples:
            application/json:
              status: ok
              result:
                payment_provision_token: ppt_4c558b3d-7146-4043-b559-4599434e2ad7
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          schema: {}
        401:
          description: Unauthorized - No valid API key provided.
          schema: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          schema: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          schema: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          schema: {}
        default:
          description: Server Error - Something went wrong.
          schema: {}
      security:
      - auth: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: >-
        This endpoint allows to cancel a payment.


        You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      summary: Cancel Mile Payment
      tags:
      - Pay with Miles
      operationId: V2EcommercePaymentsDelete
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: The body of the request.
        schema:
          $ref: '#/definitions/CancelMilePaymentRequest'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Response'
          examples:
            application/json:
              status: ok
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          schema: {}
        401:
          description: Unauthorized - No valid API key provided.
          schema: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          schema: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          schema: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          schema: {}
        default:
          description: Server Error - Something went wrong.
          schema: {}
      security:
      - auth: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v2/ecommerce/orders/{transaction_id}:
    get:
      description: >-
        This endpoint allows to get an order.


        You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      summary: Retrieve Order
      tags:
      - Earn Miles
      operationId: V2EcommerceOrdersByTransactionIdGet
      produces:
      - application/json
      parameters:
      - name: transaction_id
        in: path
        required: true
        type: string
        description: The ID of the transaction that represents the order.
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/RetrieveOrderResponse'
          examples:
            application/json:
              status: ok
              result:
                transaction_token: ort_b3b45895-f961-4cde-b9df-5b274fb757e7
                transaction_id: 6c1a75f2-d7de-4ac1-80e0-60ac83f7e083
                completed_at: 2018-01-01T09:00:00.0000000
                created_at: 2018-01-01T10:00:00.0000000
                updated_at: 2018-01-01T10:10:00.0000000
                status: processed
                subtotal: 90
                tax: 10.199999999999999
                total: 100.2
                currency: USD
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          schema: {}
        401:
          description: Unauthorized - No valid API key provided.
          schema: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          schema: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          schema: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          schema: {}
        default:
          description: Server Error - Something went wrong.
          schema: {}
      security:
      - auth: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v2/ecommerce/returns:
    get:
      description: >-
        This endpoint allows to get list of returns. In order to get detailed return history and reconciliation you can use this endpoint.


        You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      summary: List Returns
      tags:
      - Return
      operationId: V2EcommerceReturnsGet
      produces:
      - application/json
      parameters:
      - name: filter[store_code]
        in: query
        required: true
        type: string
        description: Filter for an online store.
      - name: filter[created_at]
        in: query
        required: true
        type: string
        description: Filter for created_at field. It is accepted a valid date range value. The format is YYYY-MM-DD..YYYY-MM-DD.
      - name: filter[status]
        in: query
        required: false
        type: string
        description: Filter for status field. It is accepted a valid status value of return.
      - name: sort
        in: query
        required: false
        type: string
        description: Sort for some selected fields. In order to sort descending "-" value will be used before the field. Valid field values are "created_at",  "updated_at", "status".
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/ListReturnResponse'
          examples:
            application/json:
              status: ok
              result:
              - return_provision_token: rpt_f4dd4f17-da27-4c61-af29-f7b116efa0ef
                transaction_id: 6c1a75f2-d7de-4ac1-80e0-60ac83f7e083
                created_at: 2018-01-01T10:00:00.0000000
                updated_at: 2018-01-01T10:10:00.0000000
                status: completed
                amount:
                  value: 10
                  currency: USD
              - return_provision_token: rpt_a0d2070b-0676-4131-b315-c9d653a31505
                transaction_id: 42db67d6-fde6-47ce-81eb-121cf333e0d7
                created_at: 2018-01-02T10:00:00.0000000
                updated_at: 2018-01-02T10:10:00.0000000
                status: cancelled
                amount:
                  value: 10
                  currency: USD
              - return_provision_token: rpt_0399bad5-fac3-45dd-88af-99604b153355
                transaction_id: 51424457-4997-4fa2-aed0-1a71aff88294
                created_at: 2018-01-03T10:00:00.0000000
                updated_at: 2018-01-03T10:10:00.0000000
                status: completed
                residual:
                  value: 5
                  currency: USD
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          schema: {}
        401:
          description: Unauthorized - No valid API key provided.
          schema: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          schema: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          schema: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          schema: {}
        default:
          description: Server Error - Something went wrong.
          schema: {}
      security:
      - auth: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    put:
      description: >-
        This endpoint allows to complete a return.


        You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      summary: Complete Return
      tags:
      - Return
      operationId: V2EcommerceReturnsPut
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: The body of the request.
        schema:
          $ref: '#/definitions/CompleteReturnRequest'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Response'
          examples:
            application/json:
              status: ok
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          schema: {}
        401:
          description: Unauthorized - No valid API key provided.
          schema: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          schema: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          schema: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          schema: {}
        default:
          description: Server Error - Something went wrong.
          schema: {}
      security:
      - auth: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      description: >-
        This endpoint allows to start a return for a specific order.


        You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      summary: Start Return
      tags:
      - Return
      operationId: V2EcommerceReturnsPost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: The body of the request.
        schema:
          $ref: '#/definitions/StartReturnRequest'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/StartReturnResponse'
          examples:
            application/json:
              status: ok
              result:
                return_provision_token: rpt_f4dd4f17-da27-4c61-af29-f7b116efa0ef
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          schema: {}
        401:
          description: Unauthorized - No valid API key provided.
          schema: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          schema: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          schema: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          schema: {}
        default:
          description: Server Error - Something went wrong.
          schema: {}
      security:
      - auth: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      description: >-
        This endpoint allows to cancel a return.


        You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      summary: Cancel Return
      tags:
      - Return
      operationId: V2EcommerceReturnsDelete
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: The body of the request.
        schema:
          $ref: '#/definitions/CancelReturnRequest'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Response'
          examples:
            application/json:
              status: ok
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          schema: {}
        401:
          description: Unauthorized - No valid API key provided.
          schema: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          schema: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          schema: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          schema: {}
        default:
          description: Server Error - Something went wrong.
          schema: {}
      security:
      - auth: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v2/ecommerce/payments/actions/refund:
    post:
      description: >-
        This endpoint allows to refund a payment.


        You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      summary: Refund Mile Payment
      tags:
      - Pay with Miles
      operationId: V2EcommercePaymentsActionsRefundPost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: The body of the request.
        schema:
          $ref: '#/definitions/RefundMilePaymentRequest'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/Response'
          examples:
            application/json:
              status: ok
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          schema: {}
        401:
          description: Unauthorized - No valid API key provided.
          schema: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          schema: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          schema: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          schema: {}
        default:
          description: Server Error - Something went wrong.
          schema: {}
      security:
      - auth: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /v2/ecommerce/carts:
    post:
      description: >-
        This endpoint allows to get available amount of money, based on miles of user and their discounts which is based on cart or items.


        You can try this API with configuring client parameters in Console Tab below. Test OAuthClientId is b30359c21700fd6f2b91154adcb7b37bab3e7e0a33e22682e5dd149d7a6ac4df and OAuthClientSecret is 4bc4335faad41d6a23cd059e495005f00496a64e34e6187b1d72695a8debd28c
      summary: Cart
      tags:
      - Earn Miles
      operationId: V2EcommerceCartsPost
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: The body of the request.
        schema:
          $ref: '#/definitions/CartRequest'
      responses:
        200:
          description: ''
          schema:
            $ref: '#/definitions/CartResponse'
          examples:
            application/json:
              status: ok
              result:
                available_point:
                  value: 100.2
                  currency: USD
                cart_discount:
                  discount: 10
                  currency: USD
                  discount_provision_token: dpt_edb17503-c804-48bf-b798-1d5e7d8757c7
        400:
          description: Bad Request	- The request was unacceptable, often due to missing a required parameter.
          schema: {}
        401:
          description: Unauthorized - No valid API key provided.
          schema: {}
        402:
          description: Request Failed - The parameters were valid but the request failed.
          schema: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          schema: {}
        429:
          description: Too Many Requests - Too many requests hit the API too quickly.
          schema: {}
        default:
          description: Server Error - Something went wrong.
          schema: {}
      security:
      - auth: []
      x-unitTests:
      - request:
          method: POST
          uri: /v2/ecommerce/carts
          body: ''
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: false
        x-testName: Carts
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
definitions:
  OrderStatus:
    title: OrderStatus
    description: An order status.
    example: pending
    x-enum-elements:
    - name: pending
      description: Pending
    - name: refunded
      description: Refunded
    - name: processed
      description: Processed
    - name: partially_refunded
      description: Partially Refunded
    type: string
    enum:
    - pending
    - refunded
    - processed
    - partially_refunded
  StartMilePaymentResult:
    title: StartMilePaymentResult
    description: Result object of payment for start action.
    example:
      payment_provision_token: ppt_4c558b3d-7146-4043-b559-4599434e2ad7
    type: object
    properties:
      payment_provision_token:
        description: A token represents a payment object for provisioning.
        example: '"ppt_4c558b3d-7146-4043-b559-4599434e2ad7"'
        type: string
    required:
    - payment_provision_token
  ReturnStatus:
    title: ReturnStatus
    description: A return status.
    example: started
    x-enum-elements:
    - name: started
      description: Started
    - name: cancelled
      description: Cancelled
    - name: completed
      description: Completed
    type: string
    enum:
    - started
    - cancelled
    - completed
  RetrieveReturnResponse:
    title: RetrieveReturnResponse
    description: Response object of return for retrieve action.
    allOf:
    - $ref: '#/definitions/Response'
    - example:
        status: ok
        result:
          return_provision_token: rpt_f4dd4f17-da27-4c61-af29-f7b116efa0ef
          transaction_id: 6c1a75f2-d7de-4ac1-80e0-60ac83f7e083
          created_at: 2018-01-01T10:00:00.0000000
          updated_at: 2018-01-01T10:10:00.0000000
          status: completed
          amount:
            value: 10
            currency: USD
      type: object
      properties:
        result:
          $ref: '#/definitions/Return'
  StartMilePaymentResponse:
    title: StartMilePaymentResponse
    description: Response object of payment for start action.
    allOf:
    - $ref: '#/definitions/Response'
    - example:
        status: ok
        result:
          payment_provision_token: ppt_4c558b3d-7146-4043-b559-4599434e2ad7
      type: object
      properties:
        result:
          $ref: '#/definitions/StartMilePaymentResult'
  RetrieveOrderResponse:
    title: RetrieveOrderResponse
    description: Response object of order for retrieve action.
    allOf:
    - $ref: '#/definitions/Response'
    - example:
        status: ok
        result:
          transaction_token: ort_b3b45895-f961-4cde-b9df-5b274fb757e7
          transaction_id: 6c1a75f2-d7de-4ac1-80e0-60ac83f7e083
          completed_at: 2018-01-01T09:00:00.0000000
          created_at: 2018-01-01T10:00:00.0000000
          updated_at: 2018-01-01T10:10:00.0000000
          status: processed
          subtotal: 90
          tax: 10.199999999999999
          total: 100.2
          currency: USD
      type: object
      properties:
        result:
          $ref: '#/definitions/BasicOrderResult'
  ListReturnResponse:
    title: ListReturnResponse
    description: Response object of return for list action.
    allOf:
    - $ref: '#/definitions/Response'
    - example:
        status: ok
        result:
        - return_provision_token: rpt_f4dd4f17-da27-4c61-af29-f7b116efa0ef
          transaction_id: 6c1a75f2-d7de-4ac1-80e0-60ac83f7e083
          created_at: 2018-01-01T10:00:00.0000000
          updated_at: 2018-01-01T10:10:00.0000000
          status: completed
          amount:
            value: 10
            currency: USD
        - return_provision_token: rpt_a0d2070b-0676-4131-b315-c9d653a31505
          transaction_id: 42db67d6-fde6-47ce-81eb-121cf333e0d7
          created_at: 2018-01-02T10:00:00.0000000
          updated_at: 2018-01-02T10:10:00.0000000
          status: cancelled
          amount:
            value: 10
            currency: USD
        - return_provision_token: rpt_0399bad5-fac3-45dd-88af-99604b153355
          transaction_id: 51424457-4997-4fa2-aed0-1a71aff88294
          created_at: 2018-01-03T10:00:00.0000000
          updated_at: 2018-01-03T10:10:00.0000000
          status: completed
          residual:
            value: 5
            currency: USD
      type: object
      properties:
        result:
          description: Result object of the response.
          example:
          - return_provision_token: rpt_f4dd4f17-da27-4c61-af29-f7b116efa0ef
            transaction_id: 6c1a75f2-d7de-4ac1-80e0-60ac83f7e083
            created_at: 2018-01-01T10:00:00.0000000
            updated_at: 2018-01-01T10:10:00.0000000
            status: completed
            amount:
              value: 10
              currency: USD
          - return_provision_token: rpt_a0d2070b-0676-4131-b315-c9d653a31505
            transaction_id: 42db67d6-fde6-47ce-81eb-121cf333e0d7
            created_at: 2018-01-02T10:00:00.0000000
            updated_at: 2018-01-02T10:10:00.0000000
            status: cancelled
            amount:
              value: 10
              currency: USD
          - return_provision_token: rpt_0399bad5-fac3-45dd-88af-99604b153355
            transaction_id: 51424457-4997-4fa2-aed0-1a71aff88294
            created_at: 2018-01-03T10:00:00.0000000
            updated_at: 2018-01-03T10:10:00.0000000
            status: completed
            residual:
              value: 5
              currency: USD
          type: array
          items:
            $ref: '#/definitions/Return'
  OrderResponse:
    title: OrderResponse
    description: Response object of order.
    allOf:
    - $ref: '#/definitions/Response'
    - example:
        status: ok
        result:
          transaction_token: ort_b3b45895-f961-4cde-b9df-5b274fb757e7
      type: object
      properties:
        result:
          $ref: '#/definitions/OrderResult'
  OrderResult:
    title: OrderResult
    description: Result object of the response.
    example:
      transaction_token: ort_b3b45895-f961-4cde-b9df-5b274fb757e7
    type: object
    properties:
      transaction_token:
        description: A token represents an order object from Global Miles system.
        example: '"ort_b3b45895-f961-4cde-b9df-5b274fb757e7"'
        type: string
    required:
    - transaction_token
  CancelReturnRequest:
    title: CancelReturnRequest
    description: Request of return for cancel action.
    example:
      store_code: ECO123858493939
      return_provision_token: rpt_f4dd4f17-da27-4c61-af29-f7b116efa0ef
    type: object
    properties:
      store_code:
        description: An identifier for online store.
        example: '"ECO123858493939"'
        type: string
      return_provision_token:
        description: A token represents a return object for provisioning.
        example: '"rpt_f4dd4f17-da27-4c61-af29-f7b116efa0ef"'
        type: string
    required:
    - store_code
    - return_provision_token
  PaymentStatus:
    title: PaymentStatus
    description: A payment status.
    example: started
    x-enum-elements:
    - name: started
      description: Started
    - name: completed
      description: Completed
    - name: cancelled
      description: Cancelled
    - name: refunded
      description: Refunded
    - name: used
      description: Used
    type: string
    enum:
    - started
    - completed
    - cancelled
    - refunded
    - used
  RefundMilePaymentRequest:
    title: RefundMilePaymentRequest
    description: Request of payment for refund action.
    example:
      store_code: ECO123858493939
      payment_provision_token: ppt_4c558b3d-7146-4043-b559-4599434e2ad7
      amount:
        value: 10
        currency: USD
    type: object
    properties:
      store_code:
        description: An identifier for online store.
        example: '"ECO123858493939"'
        type: string
      payment_provision_token:
        description: A token represents a payment object for provisioning.
        example: '"ppt_4c558b3d-7146-4043-b559-4599434e2ad7"'
        type: string
      amount:
        $ref: '#/definitions/Amount'
    required:
    - store_code
    - payment_provision_token
    - amount
  CancelMilePaymentRequest:
    title: CancelMilePaymentRequest
    description: Request of payment for cancel action.
    example:
      store_code: ECO123858493939
      payment_provision_token: ppt_4c558b3d-7146-4043-b559-4599434e2ad7
    type: object
    properties:
      store_code:
        description: An identifier for online store.
        example: '"ECO123858493939"'
        type: string
      payment_provision_token:
        description: A token represents a payment object for provisioning.
        example: '"ppt_4c558b3d-7146-4043-b559-4599434e2ad7"'
        type: string
    required:
    - store_code
    - payment_provision_token
  Return:
    title: Return
    description: Representing a return.
    example:
      return_provision_token: rpt_f4dd4f17-da27-4c61-af29-f7b116efa0ef
      transaction_id: 6c1a75f2-d7de-4ac1-80e0-60ac83f7e083
      created_at: 2018-01-01T10:00:00.0000000
      updated_at: 2018-01-01T10:10:00.0000000
      status: completed
      amount:
        value: 10
        currency: USD
    type: object
    properties:
      return_provision_token:
        description: The token value of a return.
        example: rpt_f4dd4f17-da27-4c61-af29-f7b116efa0ef
        type: string
      transaction_id:
        description: The ID of the transaction that represents the order.
        type: string
      created_at:
        description: Create date time of return. The format is ISO 8601 date and time.
        example: '"2018-01-01T10:00:00"'
        type: string
      updated_at:
        description: Last update date time of return. The format is ISO 8601 date and time.
        example: '"2018-01-01T10:10:00"'
        type: string
      status:
        $ref: '#/definitions/ReturnStatus'
      amount:
        $ref: '#/definitions/Amount'
      residual:
        $ref: '#/definitions/Amount'
    required:
    - return_provision_token
    - transaction_id
    - created_at
    - updated_at
    - status
  CompleteMilePaymentRequest:
    title: CompleteMilePaymentRequest
    description: Request of payment for complete action.
    example:
      store_code: ECO123858493939
      payment_provision_token: ppt_4c558b3d-7146-4043-b559-4599434e2ad7
    type: object
    properties:
      store_code:
        description: An identifier for online store.
        example: '"ECO123858493939"'
        type: string
      payment_provision_token:
        description: A token represents a payment object for provisioning.
        example: '"ppt_4c558b3d-7146-4043-b559-4599434e2ad7"'
        type: string
    required:
    - store_code
    - payment_provision_token
  StartMilePaymentRequest:
    title: StartMilePaymentRequest
    description: Request of payment for start action.
    example:
      store_code: ECO123858493939
      user_token: ut_345021fb-9ed2-4c55-841e-3ffa95ca83bf
      amount:
        value: 10
        currency: USD
    type: object
    properties:
      store_code:
        description: An identifier for online store.
        example: '"ECO123858493939"'
        type: string
      user_token:
        description: A token that is representing a Global Miles user for the current session.
        example: '"ut_345021fb-9ed2-4c55-841e-3ffa95ca83bf"'
        type: string
      amount:
        $ref: '#/definitions/Amount'
    required:
    - store_code
    - user_token
    - amount
  ListOrderResponse:
    title: ListOrderResponse
    description: Response object of order for list action.
    allOf:
    - $ref: '#/definitions/Response'
    - example:
        status: ok
        result:
        - transaction_token: ort_b3b45895-f961-4cde-b9df-5b274fb757e7
          transaction_id: 6c1a75f2-d7de-4ac1-80e0-60ac83f7e083
          completed_at: 2018-01-01T09:00:00.0000000
          created_at: 2018-01-01T10:00:00.0000000
          updated_at: 2018-01-01T10:10:00.0000000
          status: processed
          subtotal: 90
          tax: 10.199999999999999
          total: 100.2
          currency: USD
        - transaction_token: ot_fd7bc94b-4fe4-4c5a-89fa-85ce017c2b0b
          transaction_id: 42db67d6-fde6-47ce-81eb-121cf333e0d7
          completed_at: 2018-01-02T09:00:00.0000000
          created_at: 2018-01-02T10:00:00.0000000
          updated_at: 2018-01-02T10:10:00.0000000
          status: processed
          subtotal: 70
          tax: 8.1999999999999993
          total: 78.200000000000003
          currency: USD
        - transaction_token: ot_e59410fb-831a-47d2-9822-9de6efd3e39e
          transaction_id: 51424457-4997-4fa2-aed0-1a71aff88294
          completed_at: 2018-01-03T09:00:00.0000000
          created_at: 2018-01-03T10:00:00.0000000
          updated_at: 2018-01-03T10:10:00.0000000
          status: refunded
          subtotal: 60
          tax: 7.2000000000000002
          total: 67.200000000000003
          currency: USD
      type: object
      properties:
        result:
          description: Result object of the response.
          example:
          - transaction_token: ort_b3b45895-f961-4cde-b9df-5b274fb757e7
            transaction_id: 6c1a75f2-d7de-4ac1-80e0-60ac83f7e083
            completed_at: 2018-01-01T09:00:00.0000000
            created_at: 2018-01-01T10:00:00.0000000
            updated_at: 2018-01-01T10:10:00.0000000
            status: processed
            subtotal: 90
            tax: 10.199999999999999
            total: 100.2
            currency: USD
          - transaction_token: ot_fd7bc94b-4fe4-4c5a-89fa-85ce017c2b0b
            transaction_id: 42db67d6-fde6-47ce-81eb-121cf333e0d7
            completed_at: 2018-01-02T09:00:00.0000000
            created_at: 2018-01-02T10:00:00.0000000
            updated_at: 2018-01-02T10:10:00.0000000
            status: processed
            subtotal: 70
            tax: 8.1999999999999993
            total: 78.200000000000003
            currency: USD
          - transaction_token: ot_e59410fb-831a-47d2-9822-9de6efd3e39e
            transaction_id: 51424457-4997-4fa2-aed0-1a71aff88294
            completed_at: 2018-01-03T09:00:00.0000000
            created_at: 2018-01-03T10:00:00.0000000
            updated_at: 2018-01-03T10:10:00.0000000
            status: refunded
            subtotal: 60
            tax: 7.2000000000000002
            total: 67.200000000000003
            currency: USD
          type: array
          items:
            $ref: '#/definitions/BasicOrderResult'
  Amount:
    title: Amount
    description: A complex object for amount.
    example:
      value: 10
      currency: USD
    type: object
    properties:
      value:
        description: A decimal value with two decimals in the string representation of amount.
        example: 10
        type: number
        format: double
      currency:
        description: ISO 4217 currency code of the amount.
        example: '"USD"'
        type: string
    required:
    - value
    - currency
  Response:
    title: Response
    description: A basic object of the response.
    example:
      status: user_not_found
      message: User not found with given attributes
    type: object
    properties:
      status:
        description: The status of the response. The value is always "ok" for successful responses otherwise it includes error code.
        example: '"ok"'
        type: string
      message:
        description: The message of the error. It is always null for successful responses.
        example: '"User not found with given attributes"'
        type: string
    required:
    - status
  CartDiscount:
    title: CartDiscount
    description: Representing a discount for shopping cart.
    example:
      discount: 10
      currency: USD
      discount_provision_token: dpt_edb17503-c804-48bf-b798-1d5e7d8757c7
    type: object
    properties:
      currency:
        description: ISO-4217 3-letter currency code.
        example: '"USD"'
        type: string
      discount:
        description: Amount of the current discount.
        example: 10
        type: number
        format: double
      discount_provision_token:
        description: A token represents a discount object for provisioning.
        example: '"dpt_edb17503-c804-48bf-b798-1d5e7d8757c7"'
        type: string
      items:
        description: An array of discounts for cart items.
        example:
        - id: 344187961
          discount: 1
        - id: 344187960
          discount: 0.01
        type: array
        items:
          $ref: '#/definitions/CartItemDiscount'
    required:
    - currency
  Payment:
    title: Payment
    description: Representing a payment.
    example:
      payment_provision_token: ppt_4c558b3d-7146-4043-b559-4599434e2ad7
      created_at: 2018-01-01T10:00:00.0000000
      updated_at: 2018-01-01T10:10:00.0000000
      status: completed
      amount:
        value: 10
        currency: USD
    type: object
    properties:
      payment_provision_token:
        description: A token represents a payment object for provisioning.
        example: '"ppt_4c558b3d-7146-4043-b559-4599434e2ad7"'
        type: string
      created_at:
        description: Create date time of payment. The format is ISO 8601 date and time.
        example: '"2018-01-01T10:00:00"'
        type: string
      updated_at:
        description: Last update date time of payment. The format is ISO 8601 date and time.
        example: '"2018-01-01T10:00:00"'
        type: string
      status:
        $ref: '#/definitions/PaymentStatus'
      amount:
        $ref: '#/definitions/Amount'
    required:
    - payment_provision_token
    - created_at
    - updated_at
    - status
    - amount
  DiscountItem:
    title: DiscountItem
    description: Representing a discount for order.
    example:
      type: loyalty_discount
      amount: 1
      discount_provision_token: dpt_edb17503-c804-48bf-b798-1d5e7d8757c7
    type: object
    properties:
      type:
        $ref: '#/definitions/DiscountType'
      amount:
        description: Amount of the current discount.
        example: 1
        type: number
        format: double
      discount_provision_token:
        description: A token represents a discount object for provisioning.
        example: '"dpt_edb17503-c804-48bf-b798-1d5e7d8757c7"'
        type: string
    required:
    - type
    - amount
  CartItemDiscount:
    title: CartItemDiscount
    description: Representing a discount for shopping cart item.
    example:
      id: 344187961
      discount: 1
    type: object
    properties:
      id:
        description: An identifier to reference this product.
        example: '"344187961"'
        type: string
      discount:
        description: Amount of the current discount.
        example: 1
        type: number
        format: double
    required:
    - id
    - discount
  CartItem:
    title: CartItem
    description: Representing a shopping cart item.
    example:
      id: 344187961
      quantity: 1
      price: 20
    type: object
    properties:
      id:
        description: An identifier to reference this product. Universal product code.
        example: '"344187961"'
        type: string
      quantity:
        description: The quantity of the item.
        example: 1
        type: number
        format: double
      price:
        description: The price of the item.
        example: 20
        type: number
        format: double
    required:
    - id
    - quantity
    - price
  StartReturnResult:
    title: StartReturnResult
    description: Result object of return for start action.
    example:
      return_provision_token: rpt_f4dd4f17-da27-4c61-af29-f7b116efa0ef
    type: object
    properties:
      return_provision_token:
        description: A token represents a return object for provisioning.
        example: '"rpt_f4dd4f17-da27-4c61-af29-f7b116efa0ef"'
        type: string
    required:
    - return_provision_token
  StartReturnResponse:
    title: StartReturnResponse
    description: Response object of return for start action.
    allOf:
    - $ref: '#/definitions/Response'
    - example:
        status: ok
        result:
          return_provision_token: rpt_f4dd4f17-da27-4c61-af29-f7b116efa0ef
      type: object
      properties:
        result:
          $ref: '#/definitions/StartReturnResult'
  CartResult:
    title: CartResult
    description: Result object of the response.
    example:
      available_amount:
        value: 100.2
        currency: USD
      cart_discount:
        discount: 10
        currency: USD
        discount_provision_token: dpt_edb17503-c804-48bf-b798-1d5e7d8757c7
    type: object
    properties:
      available_amount:
        $ref: '#/definitions/Amount'
      cart_discount:
        $ref: '#/definitions/CartDiscount'
  OAuthRequest:
    title: OAuthRequest
    description: Representing an OAuth request.
    example:
      client_id: '{{client_id}}'
      client_secret: '{{client_secret}}'
      grant_type: '{{grant_type}}'
    type: object
    properties:
      client_id:
        description: ID of the client which is provided by Global Miles.
        example: '{{client_id}}'
        type: string
      client_secret:
        description: Secret of the client which is provided by Global Miles.
        example: '{{client_secret}}'
        type: string
      grant_type:
        description: 'Type of the OAuth flows. We support only one type of token: client_credentials'
        example: client_credentials
        type: string
        default: client_credentials
    required:
    - client_id
    - client_secret
    - grant_type
  OAuthResponse:
    title: OAuthResponse
    description: Representing an OAuth response.
    example:
      access_token: '{{access_token}}'
      token_type: bearer
      created_at: 1496737098
    type: object
    properties:
      access_token:
        description: An access token from the authorization server.
        example: '{{access_token}}'
        type: string
      token_type:
        description: The type of token this is, typically just the string "bearer".
        example: '"bearer"'
        type: string
      created_at:
        description: The time in unix time format when the access token was created.
        example: '"1496737098"'
        type: string
    required:
    - access_token
    - token_type
    - created_at
  PaymentItem:
    title: PaymentItem
    description: Representing a payment for order.
    example:
      type: mile_payment
      amount: 50
      payment_provision_token: ppt_4c558b3d-7146-4043-b559-4599434e2ad7
    type: object
    properties:
      type:
        $ref: '#/definitions/PaymentType'
      amount:
        description: Amount of current payment.
        example: 50
        type: number
        format: double
      payment_provision_token:
        description: A token represents a payment object for provisioning.
        example: '"ppt_4c558b3d-7146-4043-b559-4599434e2ad7"'
        type: string
    required:
    - type
    - amount
  CartRequest:
    title: CartRequest
    description: Request of the cart object.
    example:
      store_code: ECO123858493939
      user_token: b69c3393-54eb-471c-907d-8d4ed405f88e
      cart:
        subtotal: 90
        tax: 10.199999999999999
        total: 100.2
        currency: USD
        items:
        - id: 344187961
          quantity: 1
          price: 20
        - id: 344187960
          quantity: 2.2000000000000002
          price: 0.91000000000000003
        - id: 344187965
          quantity: 5
          price: 10
    type: object
    properties:
      user_token:
        description: A token that is representing a Global Miles user for the current session.
        example: '"ut_345021fb-9ed2-4c55-841e-3ffa95ca83bf"'
        type: string
      store_code:
        description: An identifier for online store.
        example: '"ECO123858493939"'
        type: string
      cart:
        $ref: '#/definitions/Cart'
    required:
    - user_token
    - store_code
    - cart
  OrderItem:
    title: OrderItem
    description: Representing an order item.
    example:
      id: 344187960
      quantity: 2.2000000000000002
      price: 0.91000000000000003
    type: object
    properties:
      id:
        description: An identifier to reference this product.
        example: '"344187960"'
        type: string
      quantity:
        description: The quantity of the item.
        example: 2.2000000000000002
        type: number
        format: double
      price:
        description: The price of the item.
        example: 0.91000000000000003
        type: number
        format: double
    required:
    - id
    - quantity
    - price
  OrderRequest:
    title: OrderRequest
    description: Request of order object.
    example:
      store_code: ECO123858493939
      user_token: ut_345021fb-9ed2-4c55-841e-3ffa95ca83bf
      order:
        transaction_id: 6c1a75f2-d7de-4ac1-80e0-60ac83f7e083
        completed_at: 2018-01-01T10:00:00.0000000
        subtotal: 90
        tax: 10.199999999999999
        total: 100.2
        currency: USD
        items:
        - id: 344187961
          quantity: 1
          price: 20
        - id: 344187960
          quantity: 2.2000000000000002
          price: 0.91000000000000003
        - id: 344187965
          quantity: 5
          price: 10
        discounts:
        - type: other
          amount: 1.5
        - type: loyalty_discount
          amount: 1
          discount_provision_token: dpt_edb17503-c804-48bf-b798-1d5e7d8757c7
        payments:
        - type: cash
          amount: 25.5
        - type: mile_payment
          amount: 50
          payment_provision_token: ppt_4c558b3d-7146-4043-b559-4599434e2ad7
    type: object
    properties:
      store_code:
        description: An identifier for online store.
        example: '"ECO123858493939"'
        type: string
      user_token:
        description: A token that is representing a Global Miles user for the current session.
        example: '"ut_345021fb-9ed2-4c55-841e-3ffa95ca83bf"'
        type: string
      order:
        $ref: '#/definitions/Order'
    required:
    - store_code
    - user_token
    - order
  BasicOrderResult:
    title: BasicOrderResult
    description: Representing an order in list result.
    example:
      transaction_token: ort_b3b45895-f961-4cde-b9df-5b274fb757e7
      transaction_id: 6c1a75f2-d7de-4ac1-80e0-60ac83f7e083
      completed_at: 2018-01-01T09:00:00.0000000
      created_at: 2018-01-01T10:00:00.0000000
      updated_at: 2018-01-01T10:10:00.0000000
      status: processed
      subtotal: 90
      tax: 10.199999999999999
      total: 100.2
      currency: USD
    type: object
    properties:
      transaction_token:
        description: A token represents an order object from Global Miles system.
        example: '"ort_b3b45895-f961-4cde-b9df-5b274fb757e7"'
        type: string
      transaction_id:
        description: The ID of the transaction that represents the order.
        example: '"6c1a75f2-d7de-4ac1-80e0-60ac83f7e083"'
        type: string
      completed_at:
        description: The date and time when the order was completed in partner side.
        example: '"2018-01-01T09:00:00"'
        type: string
      created_at:
        description: Create date time of order. The format is ISO 8601 date and time.
        example: '"2018-01-01T10:00:00"'
        type: string
      updated_at:
        description: Last update date time of order. The format is ISO 8601 date and time.
        example: '"2018-01-01T10:10:00"'
        type: string
      status:
        $ref: '#/definitions/OrderStatus'
      subtotal:
        description: Total value of all order items without tax.
        example: 90
        type: number
        format: double
      tax:
        description: The amount of tax.
        example: 10.199999999999999
        type: number
        format: double
      total:
        description: Total amount of order.
        example: 100.2
        type: number
        format: double
      currency:
        description: ISO-4217 3-letter currency code.
        example: '"USD"'
        type: string
    required:
    - transaction_token
    - transaction_id
    - completed_at
    - created_at
    - updated_at
    - status
    - subtotal
    - tax
    - total
    - currency
  Cart:
    title: Cart
    description: Representing a shopping cart.
    example:
      subtotal: 90
      tax: 10.199999999999999
      total: 100.2
      currency: USD
      items:
      - id: 344187961
        quantity: 1
        price: 20
      - id: 344187960
        quantity: 2.2000000000000002
        price: 0.91000000000000003
      - id: 344187965
        quantity: 5
        price: 10
    type: object
    properties:
      subtotal:
        description: Total value of all cart items without tax.
        example: 90
        type: number
        format: double
      tax:
        description: The amount of tax.
        example: 10.199999999999999
        type: number
        format: double
      total:
        description: Total amount of cart.
        example: 100.2
        type: number
        format: double
      currency:
        description: ISO-4217 3-letter currency code.
        example: '"USD"'
        type: string
      items:
        description: An array of cart items.
        example:
        - id: 344187961
          quantity: 1
          price: 20
        - id: 344187960
          quantity: 2.2000000000000002
          price: 0.91000000000000003
        - id: 344187965
          quantity: 5
          price: 10
        type: array
        items:
          $ref: '#/definitions/CartItem'
    required:
    - subtotal
    - tax
    - total
    - currency
  Order:
    title: Order
    description: Representing an order.
    example:
      transaction_id: 6c1a75f2-d7de-4ac1-80e0-60ac83f7e083
      completed_at: 2018-01-01T10:00:00.0000000
      subtotal: 90
      tax: 10.199999999999999
      total: 100.2
      currency: USD
      items:
      - id: 344187961
        quantity: 1
        price: 20
      - id: 344187960
        quantity: 2.2000000000000002
        price: 0.91000000000000003
      - id: 344187965
        quantity: 5
        price: 10
      payments:
      - type: cash
        amount: 25.5
      - type: mile_payment
        amount: 50
        payment_provision_token: ppt_4c558b3d-7146-4043-b559-4599434e2ad7
      discounts:
      - type: other
        amount: 1.5
      - type: loyalty_discount
        amount: 1
        discount_provision_token: dpt_edb17503-c804-48bf-b798-1d5e7d8757c7
    type: object
    properties:
      transaction_id:
        description: The ID of the transaction that represents the order.
        example: '"6c1a75f2-d7de-4ac1-80e0-60ac83f7e083"'
        type: string
      completed_at:
        description: The date and time when the order was completed in partner side.
        example: '"2018-01-01T10:00:00"'
        type: string
      subtotal:
        description: Total value of all order items without tax.
        example: 90
        type: number
        format: double
      tax:
        description: The amount of tax.
        example: 10.199999999999999
        type: number
        format: double
      total:
        description: Total amount of order.
        example: 100.2
        type: number
        format: double
      currency:
        description: ISO-4217 3-letter currency code.
        example: '"USD"'
        type: string
      items:
        description: An array of order items.
        example:
        - id: 344187961
          quantity: 1
          price: 20
        - id: 344187960
          quantity: 2.2000000000000002
          price: 0.91000000000000003
        - id: 344187965
          quantity: 5
          price: 10
        type: array
        items:
          $ref: '#/definitions/OrderItem'
      discounts:
        description: An array of discount items.
        example:
        - type: other
          amount: 1.5
        - type: loyalty_discount
          amount: 1
          discount_provision_token: dpt_edb17503-c804-48bf-b798-1d5e7d8757c7
        type: array
        items:
          $ref: '#/definitions/DiscountItem'
      payments:
        description: An array of payment items.
        example:
        - type: cash
          amount: 25.5
        - type: mile_payment
          amount: 50
          payment_provision_token: ppt_4c558b3d-7146-4043-b559-4599434e2ad7
        type: array
        items:
          $ref: '#/definitions/PaymentItem'
    required:
    - transaction_id
    - completed_at
    - subtotal
    - tax
    - total
    - currency
  CartResponse:
    title: CartResponse
    description: Response object of the cart.
    allOf:
    - $ref: '#/definitions/Response'
    - example:
        status: ok
        result:
          available_amount:
            value: 100.2
            currency: USD
          cart_discount:
            discount: 10
            currency: USD
            discount_provision_token: dpt_edb17503-c804-48bf-b798-1d5e7d8757c7
      type: object
      properties:
        result:
          $ref: '#/definitions/CartResult'
  DiscountType:
    title: DiscountType
    description: A type of discount.
    example: loyalty_discount
    x-enum-elements:
    - name: loyalty_discount
      description: This type indicates a discount by Global Miles.
    - name: other
      description: Other type of discounts.
    type: string
    enum:
    - loyalty_discount
    - other
  StartReturnRequest:
    title: StartReturnRequest
    description: Request of return for start action.
    example:
      store_code: ECO123858493939
      transaction_id: 6c1a75f2-d7de-4ac1-80e0-60ac83f7e083
      amount:
        value: 10
        currency: USD
    type: object
    properties:
      store_code:
        description: An identifier for online store.
        example: '"ECO123858493939"'
        type: string
      transaction_id:
        description: The ID of the transaction that represents the order.
        example: '"6c1a75f2-d7de-4ac1-80e0-60ac83f7e083"'
        type: string
      amount:
        $ref: '#/definitions/Amount'
    required:
    - store_code
    - transaction_id
  CompleteReturnRequest:
    title: CompleteReturnRequest
    description: Request of return for complete action.
    example:
      store_code: ECO123858493939
      return_provision_token: rpt_f4dd4f17-da27-4c61-af29-f7b116efa0ef
    type: object
    properties:
      store_code:
        description: An identifier for online store.
        example: '"ECO123858493939"'
        type: string
      return_provision_token:
        description: A token represents a return object for provisioning.
        example: '"rpt_f4dd4f17-da27-4c61-af29-f7b116efa0ef"'
        type: string
    required:
    - store_code
    - return_provision_token
  PaymentType:
    title: PaymentType
    description: A type of payment.
    example: credit_card
    x-enum-elements:
    - name: credit_card
      description: Credit Card
    - name: debit_card
      description: Debit Card
    - name: bank_transfer
      description: Bank Transfers / Electronic Funds Transfer (EFT)
    - name: cash
      description: Cash
    - name: digital_wallet
      description: Digital Wallet
    - name: mobile_payment
      description: Mobile Payment
    - name: gift_card
      description: Gitf Card
    - name: mile_payment
      description: Pay with miles provided by Global Miles
    - name: other
      description: Other
    type: string
    enum:
    - credit_card
    - debit_card
    - bank_transfer
    - cash
    - digital_wallet
    - mobile_payment
    - gift_card
    - mile_payment
    - other
  ListMilePaymentResponse:
    title: ListMilePaymentResponse
    description: Response object of payment for list action.
    allOf:
    - $ref: '#/definitions/Response'
    - example:
        status: ok
        result:
        - payment_provision_token: ppt_4c558b3d-7146-4043-b559-4599434e2ad7
          created_at: 2018-01-01T10:00:00.0000000
          updated_at: 2018-01-01T10:10:00.0000000
          status: completed
          amount:
            value: 10
            currency: USD
        - payment_provision_token: ppt_0d64fa6f-8871-4a3f-be3b-5a7c97853d10
          created_at: 2017-12-01T23:00:00.0000000
          updated_at: 2017-12-02T14:00:00.0000000
          status: refunded
          amount:
            value: 20
            currency: USD
        - payment_provision_token: ppt_dadd0d63-dddf-4e82-b483-5c2aca9fb5a5
          created_at: 2017-11-01T12:00:00.0000000
          updated_at: 2017-11-01T12:05:00.0000000
          status: cancelled
          amount:
            value: 23
            currency: USD
      type: object
      properties:
        result:
          description: Result object of the response.
          example:
          - payment_provision_token: ppt_4c558b3d-7146-4043-b559-4599434e2ad7
            created_at: 2018-01-01T10:00:00.0000000
            updated_at: 2018-01-01T10:10:00.0000000
            status: completed
            amount:
              value: 10
              currency: USD
          - payment_provision_token: ppt_0d64fa6f-8871-4a3f-be3b-5a7c97853d10
            created_at: 2017-12-01T23:00:00.0000000
            updated_at: 2017-12-02T14:00:00.0000000
            status: refunded
            amount:
              value: 20
              currency: USD
          - payment_provision_token: ppt_dadd0d63-dddf-4e82-b483-5c2aca9fb5a5
            created_at: 2017-11-01T12:00:00.0000000
            updated_at: 2017-11-01T12:05:00.0000000
            status: cancelled
            amount:
              value: 23
              currency: USD
          type: array
          items:
            $ref: '#/definitions/Payment'
